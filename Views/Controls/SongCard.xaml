<Grid x:Class="ElementMusic.Views.Controls.SongCard"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ElementMusic.Views.Controls"
      xmlns:s="clr-namespace:ElementMusic.Models.ElementAPI"
      xmlns:h="clr-namespace:ElementMusic.Helpers"
      xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      d:DataContext="{d:DesignInstance s:Song,
                         IsDesignTimeCreatable=False}"
      Name="Grid"
      MouseLeftButtonDown="Grid_MouseLeftButtonDown"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800">
    <Grid.Resources>
        <h:UriConverter x:Key="UriConverter"/>
        <h:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <h:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
    </Grid.Resources>
    <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <Grid.Style>
        <Style TargetType="Grid">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="0.8"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Grid.Style>

    <Border Height="150" Width="150"
            Margin="0 15 0 0"
            CornerRadius="10"
            BorderThickness="0">
        <Grid>
            <Image Source="{Binding Song.Cover.SimpleImage, ElementName=Grid, Converter={StaticResource UriConverter}, ConverterParameter=SimpleCoverUri}"
                   RenderOptions.BitmapScalingMode="Fant"
                   d:Source="/resources/images/empty_cover.jpg"
                   Panel.ZIndex="2"
                   Stretch="Fill"
                   Height="140"
                   Width="140"/>
            <Image Source="{Binding Song.Cover.SimpleImage, ElementName=Grid, Converter={StaticResource UriConverter}, ConverterParameter=SimpleCoverUri}"
                   RenderOptions.BitmapScalingMode="LowQuality"
                   Stretch="Fill"
                   Panel.ZIndex="1">
                <Image.Effect>
                    <BlurEffect Radius="15"/>
                </Image.Effect>
            </Image>
        </Grid>
    </Border>

    <Grid Grid.Row="1"
          MaxWidth="150"
          Margin="0 8 0 0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0">
            <ui:TextBlock Appearance="Primary"
                          TextTrimming="CharacterEllipsis"
                          FontTypography="BodyStrong"
                          ToolTip="{Binding Song.Title, ElementName=Grid}"
                          Text="{Binding Song.Title, ElementName=Grid}"/>
            <ui:TextBlock Appearance="Secondary"
                          TextTrimming="CharacterEllipsis"
                          ToolTip="{Binding Song.Title, ElementName=Grid}"
                          Text="{Binding Song.Artist, ElementName=Grid}"/>
        </StackPanel>

        <ui:Button Grid.Column="1"
                   Margin="7 0 0 0"
                   Command="{Binding ElementName=Grid, Path=FlyoutViewModel.OpenCommand}"
                   HorizontalAlignment="Right"
                   Appearance="Transparent"
                   BorderThickness="0"
                   Icon="{ui:SymbolIcon GridDots24}"/>
        <ui:Flyout Grid.Column="1"
                   IsOpen="{Binding ElementName=Grid, Path=FlyoutViewModel.IsOpened, Mode=TwoWay}"
                   HorizontalAlignment="Right"
                   Placement="Bottom">
            <StackPanel>
                <ui:Button Margin="0 0 0 7"
                           Command="{Binding SetLikeCommand}"
                           Icon="{ui:SymbolIcon Heart24}"
                           Content="{DynamicResource ToFavoriteButton}"
                           Visibility="{Binding Liked, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                           Appearance="Transparent"/>
                <ui:Button Margin="0 0 0 7"
                           Command="{Binding SetLikeCommand}"
                           Icon="{ui:SymbolIcon HeartBroken24}"
                           Content="{DynamicResource FromFavoriteButton}"
                           Visibility="{Binding Liked, Converter={StaticResource BooleanToVisibilityConverter}}"
                           Appearance="Transparent"/>
                <ui:Button Command="{Binding ToQueueCommand}"
                           Icon="{ui:SymbolIcon PeopleQueue24}"
                           Content="{DynamicResource ToQueueButton}"
                           Appearance="Transparent"/>
            </StackPanel>
        </ui:Flyout>
    </Grid>
</Grid>
